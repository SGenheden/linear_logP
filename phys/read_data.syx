<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{35ff6c67-42bf-4618-97bc-ba0b189f0e79}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">{"selected_uuids": ["{1ac984c8-f633-4457-bb66-1f49c2f07fbb}"], "override": true, "conf_view": "TabBuilder"}</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports>
    <output index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{8727a1a4-5250-4735-b0e7-6e236e252c1f}" x="2200.0" y="2200.0">
      <label>Port</label>
      <description>Port</description>
    </output>
  </ports>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{1ac984c8-f633-4457-bb66-1f49c2f07fbb}" x="1975.0" y="2200.0">
    <label>Excel document</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "", "editor": {"states": null, "type": "filename", "filter": ["Any files (*)"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "mssql+pyodbc:///"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "ODBC", "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": ["SQL Server"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "mode": "selected", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": ["File"]}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{512bb2f6-daea-4b0e-9ec5-c31cb8ea1fea}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{321d87a9-6ea5-442a-824c-91211800329b}" x="2100.0" y="2200.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@sysess.org&gt;</author>
    <copyright>(C) 2013 System Engineering Software Society</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Auto"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "type": "string", "value": ";"}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "type": "string", "value": null}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "source_coding": {"description": "", "editor": null, "label": "", "type": "string", "value": null}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}, "MAT": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": ["default"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": ["test"]}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": ["="]}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}}, "Table": {"label": "", "type": "group"}, "XLS": {"label": "", "type": "group", "data_end_row": {"description": "The last data row.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "mode": "selected", "passthrough": false, "type": "list", "list": ["data"], "value": [], "value_names": [], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}}, "fail_strategy": {"description": "Decide how failure to import a file should be handled.", "label": "Action on import failure", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": ["Exception"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{74041666-2986-4acc-9062-e9ebea80997a}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{30d85e5f-9053-456d-b825-9a00147ef52a}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{519f34e0-5506-48e7-95ec-fa09848f6f97}">
    <source node="{321d87a9-6ea5-442a-824c-91211800329b}" port="{30d85e5f-9053-456d-b825-9a00147ef52a}"/>
    <destination node="{35ff6c67-42bf-4618-97bc-ba0b189f0e79}" port="{8727a1a4-5250-4735-b0e7-6e236e252c1f}"/>
  </connection>
  <connection type="datasource" uuid="{cdb3f068-2ade-4b90-8061-0709d4fdcb88}">
    <source node="{1ac984c8-f633-4457-bb66-1f49c2f07fbb}" port="{512bb2f6-daea-4b0e-9ec5-c31cb8ea1fea}"/>
    <destination node="{321d87a9-6ea5-442a-824c-91211800329b}" port="{74041666-2986-4acc-9062-e9ebea80997a}"/>
  </connection>
</flow>
